<!DOCTYPE html>
<html lang="en">
<head>
  <!-- reset -->
  <link  href="styles/reset.css" rel="stylesheet">

  <meta charset="utf-8">
  <meta name="description" content="The HTML5 Herald">
  <meta name="author" content="SitePoint">
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

  <link rel="stylesheet" href="styles/styles.css">
  <link href='https://fonts.googleapis.com/css?family=Oxygen' rel='stylesheet' type='text/css'>

  <script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"></script>

  <!-- Chart.JS -->
  <script src="../scripts/Chart.bundle.js"></script>
  <style> /* prevent CSS from affecting canvas */
    canvas {
        -moz-user-select: none;
        -webkit-user-select: none;
        -ms-user-select: none;
    }
    </style>
  <!--  Chart.JS  -->


  <link rel="icon" href="./images/cl_icon.png"/>
  <title>CloudLogr</title>
</head>
<body>
  <header id="header" class="">
    <a class="button_link relative" href="/">
      Home
    </a>
  </header><!-- /header -->
  <h1>CloudLogr</h1>
  <!-- <button class="button_poll" type="">Poll: <%= schedule.dataPollRate %>ms</button> -->
  <table class="tank_table">
    <caption><h3><%= schedule.dataTagname %></h3>
    <div class="control_group">
      <span>Poll Rate: </span>
      <span id="data_poll_rate"><%= schedule.dataPollRate/1000 %></span>
      <span> seconds</span>
      <form class="inline" action="/api/v2/changePollRate" method="post" accept-charset="utf-8">
        <input class="short" type="text" name="newDataPollRate" value="5 - 60" onFocus="clearText(this)">
        <input class="button_link" type="submit" value="Change">
      </form>
    </div>
    <div class="control_group">
      <span>Polling: </span>
      <span id="data_polling_state"><%= schedule.dataPollingState ? 'Active' : 'Inactive' %></span>
      <button class="inline button_link" type="button" onclick="pollDBData()">Start Polling</button>
      <form class="inline" action="/api/v2/stopPolling" method="post" accept-charset="utf-8">
        <input type="hidden">
        <input class="button_link" type="submit" value="Stop Polling">
      </form>
    </div>
    <div class="control_group">
      <form action="/api/v2/oneReading" method="get" accept-charset="utf-8">
        <input type="hidden">
        <input class="button_link" type="submit" value="Get One Reading">
      </form>
    </div>
    </caption>
    <thead>
      <tr>
        <th colspan="" rowspan="" headers="" scope="">Value</th>
        <th colspan="" rowspan="" headers="" scope="">Timestamp</th>
        <th colspan="" rowspan="" headers="" scope="">Read Status</th>
        <th colspan="" rowspan="" headers="" scope="">Error Message</th>
      </tr>
    </thead>
    <tbody>
      <% schedule.data = schedule.data.reverse(); %><!--want newest first for rendering table-->
      <% schedule.data.slice(0,10).forEach(function(dataEntry){ %> <!-- build the table from 10 most recent entries data -->
        <tr>
          <td ><%= dataEntry.value.toFixed(1) %></td>
          <td id="td_date"><%= dataEntry.timestamp %></td>
          <td ><%= dataEntry.status ? 'good' : dataEntry.statusCode %></td>
          <td ><%= dataEntry.eWONMessage %></td>
        </tr>
      <% }); %>
    </tbody>
  </table>

  <!-- Chart.JS -->
  <div style="width:75%;">
        <canvas id="canvas"></canvas>
  </div>
  <br>
    <br>
    <button id="randomizeData">Randomize Data</button>
    <button id="addDataset">Add Dataset</button>
    <button id="removeDataset">Remove Dataset</button>
    <button id="addData">Add Data</button>
    <button id="removeData">Remove Data</button>
    <script>
        var MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

        var randomScalingFactor = function() {
            return Math.round(Math.random() * 100);
            //return 0;
        };
        var randomColorFactor = function() {
            return Math.round(Math.random() * 255);
        };
        var randomColor = function(opacity) {
            return 'rgba(' + randomColorFactor() + ',' + randomColorFactor() + ',' + randomColorFactor() + ',' + (opacity || '.3') + ')';
        };

        var config = {
            type: 'line',
            data: {
                labels: ["January", "February", "March", "April", "May", "June", "July"],
                datasets: [{
                    label: "My First dataset",

                    // Skip a point in the middle
                    data: [randomScalingFactor(), randomScalingFactor(), NaN, randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()],
                    fill: true,
                    borderDash: [5, 5],
                }, {
                    label: "My Second dataset",

                    // Skip first and last points
                    data: [NaN, randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), NaN],
                }]
            },
            options: {
                responsive: true,
                title:{
                    display:true,
                    text:'Chart.js Line Chart - Skip Points'
                },
                tooltips: {
                    mode: 'label',
                },
                hover: {
                    mode: 'label'
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Month'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Value'
                        },
                    }]
                }
            }
        };

        $.each(config.data.datasets, function(i, dataset) {
            dataset.borderColor = randomColor(0.4);
            dataset.backgroundColor = randomColor(0.5);
            dataset.pointBorderColor = randomColor(0.7);
            dataset.pointBackgroundColor = randomColor(0.5);
            dataset.pointBorderWidth = 1;
        });

        window.onload = function() {
            var ctx = document.getElementById("canvas").getContext("2d");
            window.myLine = new Chart(ctx, config);
        };

        $('#randomizeData').click(function() {
            $.each(config.data.datasets, function(i, dataset) {
                dataset.data = dataset.data.map(function() {
                    return randomScalingFactor();
                });

            });

            window.myLine.update();
        });

        $('#addDataset').click(function() {
            var newDataset = {
                label: 'Dataset ' + config.data.datasets.length,
                borderColor: randomColor(0.4),
                backgroundColor: randomColor(0.5),
                pointBorderColor: randomColor(0.7),
                pointBackgroundColor: randomColor(0.5),
                pointBorderWidth: 1,
                data: [],
            };

            for (var index = 0; index < config.data.labels.length; ++index) {
                newDataset.data.push(randomScalingFactor());
            }

            config.data.datasets.push(newDataset);
            window.myLine.update();
        });

        $('#addData').click(function() {
            if (config.data.datasets.length > 0) {
                var month = MONTHS[config.data.labels.length % MONTHS.length];
                config.data.labels.push(month);

                $.each(config.data.datasets, function(i, dataset) {
                    dataset.data.push(randomScalingFactor());
                });

                window.myLine.update();
            }
        });

        $('#removeDataset').click(function() {
            config.data.datasets.splice(0, 1);
            window.myLine.update();
        });

        $('#removeData').click(function() {
            config.data.labels.splice(-1, 1); // remove the label first

            config.data.datasets.forEach(function(dataset, datasetIndex) {
                dataset.data.pop();
            });

            window.myLine.update();
        });
    </script>
  <!-- Chart.JS -->

  <!-- for socket io, not currently in use -->

  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.js"></script>

  <script src="/socket.io/socket.io.js"></script>

  <script>
    var socket = io();
    socket.on('connect', function() {
    console.log('Connected on front end.');
});
  </script>

  <script src="/scripts/tank.js" type="text/javascript" charset="utf-8" async defer></script>
</body>
</html>
